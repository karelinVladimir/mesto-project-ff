{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/scripts/api.js","webpack://yandex_praktikum/./src/scripts/cards.js","webpack://yandex_praktikum/./src/scripts/modal.js","webpack://yandex_praktikum/./src/scripts/validation.js","webpack://yandex_praktikum/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-32\",\r\n  headers: {\r\n    authorization: \"118547c1-3283-4816-b889-bc6dfde211a3\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nfunction responseOk (res)  {\r\n  if (res.ok) {\r\n      return res.json();\r\n    }\r\n        // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const  getUserData = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(responseOk);\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then(responseOk);\r\n}; \r\n\r\nexport const getRenderCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link,\r\n    })\r\n  })\r\n    .then(responseOk);\r\n}; \r\n\r\nexport const  editProfile = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    })\r\n  })\r\n    .then(responseOk);\r\n};\r\n\r\nexport const  deleteCardServer = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n    .then(responseOk);\r\n};\r\n\r\nexport const likeCardServer = (cardId, isLiked) => {\r\n  const method = isLiked ? \"DELETE\" : \"PUT\"\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: method,\r\n    headers: config.headers,\r\n  }).then(responseOk);\r\n};\r\n\r\nexport const  editAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    })\r\n  })\r\n    .then(responseOk);\r\n};\r\n\r\n\r\n\r\n\r\n","// @todo: Темплейт карточки\r\n\r\nimport { deleteCardServer, likeCardServer } from \"./api\";\r\n\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\n\r\nfunction createCard(\r\n  cardInfo, userId,\r\n  { deleteCardHandler, likeCardHandler, clickImageHandler }\r\n) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const likeCount = cardElement.querySelector(\".card__like-count\");\r\n  const isLiked = cardInfo.likes.some((user) => user._id === userId);\r\n  if (isLiked) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n  const userCardId = cardInfo.owner._id === userId;\r\n  if (userCardId) {\r\n    deleteButton.classList.remove(\"card__delete-button_inactive\");\r\n    deleteButton.addEventListener(\"click\", () => deleteCardHandler(cardInfo._id, cardElement));\r\n  } else {\r\n    deleteButton.classList.add(\"card__delete-button_inactive\");\r\n  };\r\n  cardTitle.textContent = cardInfo.name;\r\n  cardImage.src = cardInfo.link;\r\n  cardImage.alt = cardInfo.name; \r\n  likeCount.textContent = cardInfo.likes.length;\r\n  likeButton.addEventListener(\"click\", () => likeCardHandler(cardInfo._id, likeButton, likeCount));\r\n  cardImage.addEventListener(\"click\", () =>\r\n    clickImageHandler(cardImage, cardTitle)\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\nconst callbacks = {\r\n  deleteCardHandler: deleteCard,\r\n  likeCardHandler: likeCard,\r\n  clickImageHandler: null,\r\n};\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nfunction deleteCard(cardId, cardElement) {\r\n  deleteCardServer(cardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка\", err);\r\n    });\r\n}\r\n\r\n// @todo: Функция лайка карточки\r\n\r\nfunction likeCard(cardId, likeButton, likeCount) {\r\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\r\n  likeCardServer(cardId, isLiked)\r\n  .then((result) => {\r\n    likeCount.textContent = result.likes.length;\r\n    likeButton.classList.toggle(\"card__like-button_is-active\");\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Ошибка\", err);\r\n  });\r\n}\r\n\r\nexport { createCard, callbacks };\r\n","function openModal(element) {\r\n  element.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n  window.addEventListener(\"click\", closePopupBg);\r\n  document.addEventListener(\"click\", closePopupButton);\r\n}\r\n\r\nfunction closeModal(element) {\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n  window.removeEventListener(\"click\", closePopupBg);\r\n  document.removeEventListener(\"click\", closePopupButton);\r\n}\r\n\r\nfunction closePopupButton(evt) {\r\n  if (evt.target.classList.contains(\"popup__close\")) {\r\n    const popup = evt.target.closest(\".popup\");\r\n    closeModal(popup);\r\n  }\r\n}\r\n\r\nfunction closePopupBg(evt) {\r\n  if (evt.target.classList.contains(\"popup\")) {\r\n    closeModal(evt.target);\r\n  }\r\n}\r\n\r\nfunction closePopupEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const popup = document.querySelector(\".popup_is-opened\");\r\n    closeModal(popup);\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","// @todo: Валидация\r\n\r\n// @todo: Функция показа ошибки валидации\r\n\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  { inputErrorClass, errorClass }\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.classList.add(errorClass);\r\n  errorElement.textContent = errorMessage;\r\n};\r\n\r\n// @todo: Функция скрытия ошибки валидации\r\n\r\nconst hideInputError = (\r\n  formElement,\r\n  inputElement,\r\n  { inputErrorClass, errorClass }\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(errorClass);\r\n  errorElement.textContent = \"\";\r\n  inputElement.setCustomValidity(\"\");\r\n};\r\n\r\n// @todo: Функция проверки валидации\r\n\r\nconst isValid = (\r\n  formElement,\r\n  inputElement,\r\n  { inputErrorClass, errorClass }\r\n) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, {\r\n      inputErrorClass,\r\n      errorClass,\r\n    });\r\n  } else {\r\n    hideInputError(formElement, inputElement, { inputErrorClass, errorClass });\r\n  }\r\n};\r\n\r\n// @todo: Функция добавления обработчика событий на все поля\r\n\r\nconst setEventListeners = (\r\n  formElement,\r\n  {\r\n    inputSelector,\r\n    submitButtonSelector,\r\n    inactiveButtonClass,\r\n    inputErrorClass,\r\n    errorClass,\r\n  }\r\n) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement, { inputErrorClass, errorClass });\r\n      toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\n// @todo: Функция переключения состояния кнопки формы\r\n\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n};\r\n\r\n// @todo: Функция проверки невалидных полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// @todo: Функция включения валидации форм\r\n\r\nexport const enableValidation = ({\r\n  formSelector,\r\n  inputSelector,\r\n  submitButtonSelector,\r\n  inactiveButtonClass,\r\n  inputErrorClass,\r\n  errorClass,\r\n}) => {\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, {\r\n      inputSelector,\r\n      submitButtonSelector,\r\n      inactiveButtonClass,\r\n      inputErrorClass,\r\n      errorClass,\r\n    });\r\n  });\r\n};\r\n\r\n// @todo: Функция очистки ошибок валидации\r\n\r\nexport const clearValidation = (\r\n  formElement,\r\n  {\r\n    inputSelector,\r\n    submitButtonSelector,\r\n    inactiveButtonClass,\r\n    inputErrorClass,\r\n    errorClass,\r\n  }\r\n) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, {inputErrorClass, errorClass});\r\n  });\r\n    toggleButtonState(inputList, buttonElement, inactiveButtonClass); \r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import \"../pages/index.css\";\r\nimport { createCard, callbacks } from \"./cards.js\";\r\nimport { closeModal, openModal } from \"./modal.js\";\r\ncallbacks.clickImageHandler = openImagePopup;\r\nimport { enableValidation, clearValidation } from \"./validation.js\";\r\nimport {\r\n  getInitialCards,\r\n  getRenderCard,\r\n  getUserData,\r\n  editProfile,\r\n  editAvatar,\r\n} from \"./api.js\";\r\n\r\n\r\n// @todo: Кнопки Submit\r\n\r\nconst submitButtonAvatar = document.querySelector(\".popup__button-avatar\");\r\nconst submitButtonProfile = document.querySelector(\".popup__button-profile\");\r\nconst submitButtonPlace = document.querySelector(\".popup__button-place\");\r\n\r\n// @todo: Карточки\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nlet userId;\r\n\r\n// @todo: Новые карточки\r\n\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst placeForm = document.forms[\"new-place\"];\r\n\r\n// @todo: Открытие попапов\r\n\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAvatarButton = document.querySelector(\".profile__avatar-button\");\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeAvatar = document.querySelector(\".popup_type_avatar\");\r\n\r\n// @todo: Аватар\r\n\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst avatarForm = document.forms[\"edit-avatar\"]\r\nconst avatarInput = avatarForm.elements.link;\r\nconst avatarImage = document.querySelector(\".profile__image\");\r\n\r\n// @todo: Редактирование профиля\r\n\r\nconst popupProfile = document.querySelector(\".popup_type_edit\");\r\nconst profileForm = document.forms[\"edit-profile\"];\r\nconst nameInput = profileForm.elements.name;\r\nconst jobInput = profileForm.elements.description;\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n\r\n// @todo: Попап изображения\r\n\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupImageCard = document.querySelector(\".popup__image\");\r\nconst popupImageTitle = document.querySelector(\".popup__caption\");\r\n\r\n// @todo: Добавление карточки на страницу\r\n\r\nfunction renderCard(item, userId, method = \"prepend\") {\r\n  const cardElement = createCard(item, userId, callbacks);\r\n  placesList[method](cardElement);\r\n}\r\n\r\nPromise.all([getInitialCards(), getUserData()])\r\n  .then(([cards, userData]) => { \r\n    userId = userData._id;\r\n    cards.forEach(card => {\r\n      renderCard(card, userId, \"append\");\r\n    });\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    avatarImage.style.backgroundImage = `url('${userData.avatar}')`;\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Ошибка\", err);\r\n  });\r\n\r\nfunction handleCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const placeName = placeForm.elements[\"place-name\"].value;\r\n  const placeLink = placeForm.elements.link.value;\r\n  setButtonLoading(submitButtonPlace, true);\r\n  getRenderCard(placeName, placeLink)\r\n    .then((newCard) => {\r\n      renderCard(newCard, userId);\r\n      placeForm.reset();\r\n      clearValidation(placeForm, validationConfig);\r\n      closeModal(popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка\", err);\r\n    })\r\n    .finally(() => {\r\n      setButtonLoading(submitButtonPlace, false);\r\n    });\r\n};\r\n\r\nplaceForm.addEventListener(\"submit\", handleCardFormSubmit);\r\n\r\n// Открытие попапов\r\n\r\nprofileAddButton.addEventListener(\"click\", () => openModal(popupTypeNewCard));\r\nprofileAvatarButton.addEventListener(\"click\", () => openModal(popupTypeAvatar));\r\nprofileEditButton.addEventListener(\r\n  \"click\",\r\n  () => {\r\n    openModal(popupTypeEdit);\r\n    fillProfileInputs();\r\n    clearValidation(profileForm, validationConfig);\r\n  }\r\n);\r\n\r\n// попап, замена аватара\r\n\r\nfunction updateAvatar(updateImage) {\r\n  avatarImage.style.backgroundImage = `url('${updateImage}')`;\r\n}\r\n\r\nfunction handleAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const avatarLink = avatarInput.value;\r\n  setButtonLoading(submitButtonAvatar, true);\r\n  editAvatar(avatarLink)\r\n  .then(() => {\r\n    updateAvatar(avatarLink);\r\n    closeModal(popupAvatar);\r\n    avatarForm.reset();\r\n    clearValidation(avatarForm, validationConfig);\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Ошибка\", err);\r\n  })\r\n  .finally(() => {\r\n    setButtonLoading(submitButtonAvatar, false);\r\n  })\r\n}\r\n\r\navatarForm.addEventListener(\"submit\", handleAvatarFormSubmit);\r\n\r\n// попап, редактирование профиля\r\n\r\nfunction updateProfile(userData) {\r\n  profileTitle.textContent = userData.name;\r\n  profileDescription.textContent = userData.about;\r\n}\r\n\r\nfunction fillProfileInputs() {\r\n    nameInput.value = profileTitle.textContent;\r\n    jobInput.value = profileDescription.textContent;\r\n  };\r\n\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  setButtonLoading(submitButtonProfile, true);\r\n  editProfile(nameInput.value, jobInput.value)\r\n    .then((result) => {\r\n      updateProfile(result);\r\n      closeModal(popupProfile);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка\", err);\r\n    })\r\n    .finally(() => {\r\n      setButtonLoading(submitButtonProfile, false);\r\n    });\r\n};\r\n\r\n\r\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\n\r\n// @todo: Функция. открытие попапа с картинкой\r\n\r\nfunction openImagePopup(cardImage, cardTitle) {\r\n  popupImageCard.src = cardImage.src;\r\n  popupImageCard.alt = cardImage.alt;\r\n  popupImageTitle.textContent = cardTitle.textContent;\r\n  openModal(popupTypeImage);\r\n};\r\n\r\n// @todo: Валидация\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n\r\nenableValidation(validationConfig); \r\n\r\n\r\n// // @todo: Улучшенный UX форм\r\n\r\nfunction setButtonLoading (submitButton, isLoading) {\r\n  if (isLoading) {\r\n    submitButton.textContent = \"Сохранение...\";\r\n    submitButton.disabled = true;\r\n  } \r\n  else {\r\n    submitButton.textContent = \"Сохранить\";\r\n    submitButton.disabled = false;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["config","baseUrl","headers","authorization","responseOk","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","callbacks","deleteCardHandler","cardId","cardElement","fetch","method","then","deleteCardServer","remove","catch","err","console","error","likeCardHandler","likeButton","likeCount","isLiked","likeCardServer","classList","contains","result","textContent","likes","length","toggle","clickImageHandler","openModal","element","add","addEventListener","closePopupEsc","window","closePopupBg","closePopupButton","closeModal","removeEventListener","evt","target","closest","key","hideInputError","formElement","inputElement","_ref2","inputErrorClass","errorClass","errorElement","id","setCustomValidity","toggleButtonState","inputList","buttonElement","inactiveButtonClass","hasInvalidInput","disabled","some","validity","valid","clearValidation","_ref6","inputSelector","submitButtonSelector","Array","from","querySelectorAll","forEach","cardImage","cardTitle","popupImageCard","src","alt","popupImageTitle","popupTypeImage","userId","submitButtonAvatar","submitButtonProfile","submitButtonPlace","placesList","popupNewCard","placeForm","forms","profileAddButton","profileEditButton","profileAvatarButton","popupTypeEdit","popupTypeNewCard","popupTypeAvatar","popupAvatar","avatarForm","avatarInput","elements","link","avatarImage","popupProfile","profileForm","nameInput","name","jobInput","description","profileTitle","profileDescription","renderCard","item","arguments","undefined","cardInfo","_ref","cloneNode","deleteButton","user","_id","owner","createCard","all","cards","userData","card","about","style","backgroundImage","avatar","preventDefault","placeName","value","placeLink","setButtonLoading","body","JSON","stringify","newCard","reset","validationConfig","finally","avatarLink","updateImage","_ref5","formSelector","submitButton","isLoading","_ref4","_ref3","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners"],"sourceRoot":""}